#include <iostream>
#include <vector>
using namespace std;
//prefix array--------------
vector<int> prefix_sub(string z)
{
    int n=z.length();
    vector<int> F(n);

    F[0]=0;
    int j;
    for(int i=1;i<n;i++)
    {
        j=F[i-1];
        while(j>0&&z[j]!=z[i])
        {
            j=F[j-1];
        }
        if(z[i]==z[j])
        {
            j++;
        }
         F[i]=j;
    }

    return F;
}
//prefix array--------------
int main(){
    string s,z;
    cin>>z>>s;
    int j=0;
    vector<int> prefix=prefix_sub(z);
    int ans=0;
    int i=0;
   //KMP ALGO------------------------
   while(i<s.length())
    {
        if(s[i]==z[j])
        {
        j++;
        i++;
        }
        else{
            if(j!=0)
             j=prefix[j-1];
            else
             i=i+1;
        }
        if(j==z.length())
        {
         ans++;
         j=prefix[j-1];
         
        }
        
    }
    //KMP ALGO-----------------------
      cout<<ans<<endl;//no of occcurences of pattern
    return 0;
}

