
public class HeapSort {
	
	void sort(int a[])
	{
		int n = a.length;
		for(int i = n/2 -1;i>=0;i--)
		{
			Max_heapify(a,n,i);
		}
		for(int i =n-1;i>=0;i--)
		{
			int temp = a[i];
			a[i]=a[0];
			a[0]=temp;
			
			Max_heapify(a,i,0);
		}
	}
	static void Max_heapify(int a[] ,int n,int i)
	{
		int largest =i;
		int l = 2*i+1;
		int r = 2*i+2;
		if(l<n && a[l]>a[largest])
		{
			largest =l;
		}
		if(r<n && a[r]>a[largest])
		{
			largest = r;
		}
		
		if(largest !=i)
		{
			int temp = a[i];
			a[i]=a[largest];
			a[largest]=temp;
			Max_heapify(a,n,largest);
		}
	}
	
	void printArray(int a[],int n)
	{
		for(int i=0;i<n;i++)
		{
			System.out.print(a[i]+" ");
		}
	}
	
	public static void main(String args[])
	{
		int[] a = {16,4,10,14,7,9,3,2,8,1};
		int n = a.length;
		HeapSort ob =  new HeapSort();
		ob.sort(a);
		ob.printArray(a,n);
	}

}
