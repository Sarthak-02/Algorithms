public class Selection{
	
	static void Sort(int a[], int i,int n)
	{
		if(n-i==1)
		{
			//System.out.println(a[i]);
			return;
			
		}
			
		int c[] = new int[5];
		int count;
		int l=i;
		for(count=0;count<n-i;count++)
		{
			c[count]=a[l];
					l++;
		
		}
	   int  key, j;
	   for (l = 1; l < count; l++)
	   {
	       key = c[l];
	       j = l-1;
	 
	       
	       while (j >= 0 && c[j] > key)
	       {
	           c[j+1] =c[j];
	           j = j-1;
	       }
	       c[j+1] = key;
	   }
	   count=0;
	   for( l=i;l<n;l++)
	   {
		   a[l] = c[count];
		  // System.out.print(a[l]);
		   count++;
	   }
	 //  System.out.println();
	   
	}
	
	static int findMedian(int[] a , int i,int n)
	{
		Sort(a,i,n);
		//System.out.print(i+" "+n+" ");
	/*	if((n-i)%2==0)
		System.out.println((n-i)/2+i-1 +" "+a[(n-i)/2 +i-1]);
		else
			System.out.println((n-i)/2+i +" "+a[(n-i)/2 +i]);
		*/
		if((n-i)%2==0)
			return a[(n-i)/2 + i-1];
		else
		return a[(n-i)/2 +i];
	}
	static int partition(int[] a, int p, int r,int medofMed)
	{
		int x = medofMed;
		for(int i=p;i<r;i++)
		{
			if(a[i]==x)
			{
				int temp = x;
				x = a[r];
				a[r]=temp;
			}
		}
		int i = p-1;
		int pivot = a[r];
		int j;
		for(j=p;j<r;j++)
		{
			if(a[j]<=pivot)
			{
				i++;
				int temp = a[j];
				a[j]=a[i];
				a[i]=temp;
			}
		}
		int temp = pivot;
		pivot = a[i+1];
		a[i+1]=temp;
		return i+1 ;
	}
	
	static int selection(int[] a,int p,int r,int i)
	{
		if(p==r)
		{
			return a[p];
		}
		int j,n=r-p+1;  //number of elements in array
		int median[] = new int[(n+4)/5]; // number of groups.
		
		for(j=0;j<n/5;j++)
		{
			median[j] = findMedian(a,p+j*5,p+j*5+5);
			//System.out.println(median[j]);
		}
		//System.out.println(j*5);
		
		if(j*5<n)
		{
			median[j] = findMedian(a,p+j*5,p+j*5+n%5);
			//System.out.println(median[j]);
					j++;
		}
				int medofMed;
		if(j==1)
		{
			medofMed = median[j-1];
		}
		else
		{
			 medofMed = selection(median,0,j-1,j/2);
		}
		//System.out.println(medofMed);
		int q = partition(a,p,r,medofMed);
		System.out.println(q);
		int k = q-p+1;
		
		if(i==k)
		{
			return a[q];
		}
		else if(i<k)
		{
			return selection(a,p,q-1,i);
		}
		else
			return selection(a,q+1,r,i);
		
		
	}
	
	public static void main(String args[])
	{
		int[] a = {1,2,4,3,5};
		int i=2;
		int n = a.length;
		int ans=selection(a,0,n-1,i);
	//System.out.println(ans);
	}
}
